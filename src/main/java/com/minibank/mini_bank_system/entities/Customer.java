package com.minibank.mini_bank_system.entities;

import java.util.List;
import java.util.Set;

import org.hibernate.envers.Audited;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;

@Data
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
@AllArgsConstructor
@SuperBuilder
@Entity
@Audited
public class Customer extends BaseEntity {

	public String name;

	public String lastname;

	public String phoneNumber;

	public String email;

	@Enumerated(EnumType.STRING)
	public CustomerType customerType;

	// @Builder.Default: This annotation is used when you want a field's default
	// value to be included in the builder
	// pattern generated by Lombok. Without this annotation, @SuperBuilder (or
	// @Builder) will ignore the initializing expression,
	// and the field will remain null unless explicitly set during the build
	// process.

	@OneToMany(mappedBy = "customer", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	public List<Address> addresses;

	@ManyToMany(mappedBy = "owners")
	private Set<Account> accounts;

	public void addAddress(Address address) {
		addresses.add(address);
		address.setCustomer(this);
	}

	public void addAccount(Account account) {
		if (accounts.add(account)) {
			account.getOwners().add(this);
		}
	}

}
